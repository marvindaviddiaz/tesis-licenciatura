AWSTemplateFormatVersion : '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Tesis Licenciatura

Globals:
  Function:
    Runtime: java8
    Timeout: 30
    MemorySize: 128
    Tags:
      bill: tesis
#    Environment:
#      Variables:
#        RDS_HOSTNAME: betsrds.ckcok406xu5a.us-west-2.rds.amazonaws.com:3006
#        RDS_DB_NAME: Bets
#        RDS_USERNAME: master
#        RDS_PASSWORD: master123

Resources:

  eafgConsulta:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: eafg-consulta
      Handler: com.github.marvindaviddiaz.Servicio
      CodeUri: ./eafg-consulta.jar
      Description: Consulta de Agua
      Events:
        PostEvent:
          Type: Api
          Properties:
            Path: /eafg/consulta/
            Method: post
      Role:
        Fn::GetAtt:
          - LambdaExecutionRole
          - Arn

  eafgPago:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: eafg-pago
      Handler: com.github.marvindaviddiaz.Servicio
      CodeUri: ./eafg-pago.jar
      Description: Pago de Agua
      Events:
        PostEvent:
          Type: Api
          Properties:
            Path: /eafg/pago/
            Method: post
      Role:
        Fn::GetAtt:
          - LambdaExecutionRole
          - Arn

  eefgConsulta:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: eefg-consulta
      Handler: com.github.marvindaviddiaz.Servicio
      CodeUri: ./eefg-consulta.jar
      Description: Consulta de Electricidad
      Events:
        PostEvent:
          Type: Api
          Properties:
            Path: /eefg/consulta/
            Method: post
      Role:
        Fn::GetAtt:
          - LambdaExecutionRole
          - Arn

  eefgPago:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: eefg-pago
      Handler: com.github.marvindaviddiaz.Servicio
      CodeUri: ./eefg-pago.jar
      Description: Pago de Electricidad
      Events:
        PostEvent:
          Type: Api
          Properties:
            Path: /eefg/pago/
            Method: post
      Role:
        Fn::GetAtt:
          - LambdaExecutionRole
          - Arn

  etfgConsulta:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: etfg-consulta
      Handler: com.github.marvindaviddiaz.Servicio
      CodeUri: ./etfg-consulta.jar
      Description: Consulta de Teléfono
      Events:
        PostEvent:
          Type: Api
          Properties:
            Path: /etfg/consulta/
            Method: post
      Role:
        Fn::GetAtt:
          - LambdaExecutionRole
          - Arn

  etfgPago:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: etfg-pago
      Handler: com.github.marvindaviddiaz.Servicio
      CodeUri: ./etfg-pago.jar
      Description: Pago de Teléfono
      Events:
        PostEvent:
          Type: Api
          Properties:
            Path: /etfg/pago/
            Method: post
      Role:
        Fn::GetAtt:
          - LambdaExecutionRole
          - Arn

  api:
    Type: AWS::Serverless::Api
    Properties:
      Name: servicios-ficticios-terceros
      StageName: dev
      DefinitionBody:
        swagger: '2.0'
        paths:
          /eafg/consulta/:
            produces:
              - application/json
            responses:
              '200':
                description: 200 response
            post:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: AWS #AWS_PROXY
                  uri: !Sub 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${eafgConsulta.Arn}/invocations'


  LambdaExecutionRole:
    Description: Creating service role in IAM for AWS Lambda
    Type: AWS::IAM::Role
    Properties:
      RoleName: 'LambdaExecutionRole'
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: [lambda.amazonaws.com]
            Action: sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        -  arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
#      PermissionsBoundary: !Sub 'arn:${AWS::Partition}:iam::${AWS::AccountId}:policy/CodeStar_${ProjectId}_PermissionsBoundary'


