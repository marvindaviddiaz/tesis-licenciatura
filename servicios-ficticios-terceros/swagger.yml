swagger: '2.0'
#        x-amazon-apigateway-policy:
#          Version: "2012-10-17"
#          Statement:
#            - Effect: "Deny"
#              Principal: "*"
#              Action: "execute-api:Invoke"
#              Resource:
#                Fn::Sub: "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:*/*"
#              Condition:
#                StringNotEqualsIfExists:
#                  aws:sourceVpce: !Ref VpcEndpointTercerosApi
#            - Effect: "Allow"
#              Principal: "*"
#              Action: "execute-api:Invoke"
#              Resource:
#                Fn::Sub: "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:*/*"
info:
  version: '1.0'
  title: servicios-ficticios-terceros
  description: servicios-ficticios-terceros

paths:
  /eafg/consulta/:
    post:
      produces:
        - application/json
      responses:
        '200':
          description: 200 response
      x-amazon-apigateway-integration:
        type: aws
        httpMethod: post
        uri:
          Fn::Sub: 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${eafgConsultaArn}/invocations'
        responses:
          default:
            statusCode: "200"
  /eafg/pago/:
    post:
      produces:
        - application/json
      responses:
        '200':
          description: 200 response
      x-amazon-apigateway-integration:
        type: aws
        httpMethod: post
        uri:
          Fn::Sub: 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${eafgPagoArn}/invocations'
        responses:
          default:
            statusCode: "200"
  /etfg/consulta/:
    post:
      produces:
        - application/json
      responses:
        '200':
          description: 200 response
      x-amazon-apigateway-integration:
        type: aws
        httpMethod: post
        uri:
          Fn::Sub: 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${etfgConsultaArn}/invocations'
        responses:
          default:
            statusCode: "200"
  /etfg/pago/:
    post:
      produces:
        - application/json
      responses:
        '200':
          description: 200 response
      x-amazon-apigateway-integration:
        type: aws
        httpMethod: post
        uri:
          Fn::Sub: 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${etfgPagoArn}/invocations'
        responses:
          default:
            statusCode: "200"
  /eefg/consulta/:
    post:
      produces:
        - application/json
      responses:
        '200':
          description: 200 response
      x-amazon-apigateway-integration:
        type: aws
        httpMethod: post
        uri:
          Fn::Sub: 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${eefgConsultaArn}/invocations'
        responses:
          default:
            statusCode: "200"
  /eefg/pago/:
    post:
      produces:
        - application/json
      responses:
        '200':
          description: 200 response
      x-amazon-apigateway-integration:
        type: aws
        httpMethod: post
        uri:
          Fn::Sub: 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${eefgPagoArn}/invocations'
        responses:
          default:
            statusCode: "200"
