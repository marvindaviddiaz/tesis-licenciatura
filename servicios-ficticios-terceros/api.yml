AWSTemplateFormatVersion : '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Tesis Licenciatura

Parameters:
  Prefix:
    Description: Prefix (without spaces)
    Type: String

Globals:
  Api:
    Cors:
      AllowMethods: "'OPTIONS,GET,POST,PUT,DELETE'"
      AllowHeaders: "'Content-Type,Authorization'"
      AllowOrigin: "'*'"

Resources:

  ServerlessTercerosApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: servicios-ficticios-terceros
      StageName: dev
      DefinitionBody:
        swagger: '2.0'
        paths:
          /eafg/consulta/:
            post:
              produces:
                - application/json
              responses:
                '200':
                  description: 200 response
              x-amazon-apigateway-integration:
                type: aws
                httpMethod: post
                uri:
                  Fn::Sub:
                    - 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${functionArn}/invocations'
                    - functionArn:
                        Fn::ImportValue:
                          !Sub "${Prefix}-eafgConsultaArn"
                responses:
                  default:
                    statusCode: "200"
          /eafg/pago/:
            post:
              produces:
                - application/json
              responses:
                '200':
                  description: 200 response
              x-amazon-apigateway-integration:
                type: aws
                httpMethod: post
                uri:
                  Fn::Sub:
                    - 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${functionArn}/invocations'
                    - functionArn:
                        Fn::ImportValue:
                          !Sub "${Prefix}-eafgPagoArn"
                responses:
                  default:
                    statusCode: "200"
          /etfg/consulta/:
            post:
              produces:
                - application/json
              responses:
                '200':
                  description: 200 response
              x-amazon-apigateway-integration:
                type: aws
                httpMethod: post
                uri:
                  Fn::Sub:
                    - 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${functionArn}/invocations'
                    - functionArn:
                        Fn::ImportValue:
                          !Sub "${Prefix}-etfgConsultaArn"
                responses:
                  default:
                    statusCode: "200"
          /etfg/pago/:
            post:
              produces:
                - application/json
              responses:
                '200':
                  description: 200 response
              x-amazon-apigateway-integration:
                type: aws
                httpMethod: post
                uri:
                  Fn::Sub:
                    - 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${functionArn}/invocations'
                    - functionArn:
                        Fn::ImportValue:
                          !Sub "${Prefix}-etfgPagoArn"
                responses:
                  default:
                    statusCode: "200"
          /eefg/consulta/:
            post:
              produces:
                - application/json
              responses:
                '200':
                  description: 200 response
              x-amazon-apigateway-integration:
                type: aws
                httpMethod: post
                uri:
                  Fn::Sub:
                    - 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${functionArn}/invocations'
                    - functionArn:
                        Fn::ImportValue:
                          !Sub "${Prefix}-eefgConsultaArn"
                responses:
                  default:
                    statusCode: "200"
          /eefg/pago/:
            post:
              produces:
                - application/json
              responses:
                '200':
                  description: 200 response
              x-amazon-apigateway-integration:
                type: aws
                httpMethod: post
                uri:
                  Fn::Sub:
                    - 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${functionArn}/invocations'
                    - functionArn:
                        Fn::ImportValue:
                          !Sub "${Prefix}-eefgPagoArn"
                responses:
                  default:
                    statusCode: "200"


  #################
  ######## PERMISSIONS
  #################

  eafgConsultaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt FunctionsSFTStack.Outputs.eafgConsultaArn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ServerlessTercerosApi}/*/*/*"

  eafgPagoPermission:
    Type: "AWS::Lambda::Permission"
    Properties:
      Action: "lambda:InvokeFunction"
      FunctionName: !GetAtt FunctionsSFTStack.Outputs.eafgPagoArn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ServerlessTercerosApi}/*/*/*"

  eefgConsultaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt FunctionsSFTStack.Outputs.eefgConsultaArn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ServerlessTercerosApi}/*/*/*"

  eefgPagoPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt FunctionsSFTStack.Outputs.eefgPagoArn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ServerlessTercerosApi}/*/*/*"

  etfgConsultaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt FunctionsSFTStack.Outputs.etfgConsultaArn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ServerlessTercerosApi}/*/*/*"

  etfgPagoPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt FunctionsSFTStack.Outputs.etfgPagoArn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ServerlessTercerosApi}/*/*/*"
