AWSTemplateFormatVersion : '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Tesis Licenciatura

Parameters:
  Prefix:
    Description: Prefix (without spaces)
    Type: String

Globals:
  Function:
    Runtime: java11
    Timeout: 30
    MemorySize: 256
    Tracing: Active
    Tags:
      bill: tesis
    Environment:
      Variables:
        RDS_ENDPOINT: /Tesis/BD/host
        RDS_DB_NAME: /Tesis/BD/name
        RDS_USERNAME: /Tesis/BD/user
        RDS_PASSWORD: /Tesis/BD/password
#    VpcConfig:
#      SecurityGroupIds:
#        - sg-877d0ee2
#      SubnetIds:
#        - subnet-a30268c6 # same for vpc endpoints
#        - subnet-fad6ecd2

Resources:
  RoleForLambdas:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -   Effect: "Allow"
              Principal:
                Service: "lambda.amazonaws.com"
              Action: "sts:AssumeRole"
          -   Effect: "Allow"
              Principal:
                Service: "apigateway.amazonaws.com"
              Action: "sts:AssumeRole"
      Policies:
        - PolicyName: GetParametersSystemManagerPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: 'ssm:GetParameter'
                Resource: !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/Tesis/BD/*'
        - PolicyName: DecryptParametersSystemManagerPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: 'kms:Decrypt'
                Resource: !Sub 'arn:aws:kms:${AWS::Region}:${AWS::AccountId}:key/d7487d9a-9099-4a31-992a-b704d9f00ab4'
        - PolicyName: XRayPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: ['xray:PutTraceSegments', 'xray:PutTelemetryRecords']
                Resource: '*'

      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/service-role/AWSLambdaRole
        - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole

  #################
  ######## LAMBDAS
  #################

  buscarServicio:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: buscar-servicio
      Handler: com.github.marvindaviddiaz.ServicioService
      CodeUri: ./buscar-servicio/target/buscar-servicio-1.0-SNAPSHOT.jar
      Description: Buscar Servicio
      Role: !GetAtt RoleForLambdas.Arn

  listarCuentas:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: listar-cuentas
      Handler: com.github.marvindaviddiaz.CuentaService
      CodeUri: ./listar-cuentas/target/listar-cuentas-1.0-SNAPSHOT.jar
      Description: Listar Cuentas
      Role: !GetAtt RoleForLambdas.Arn

  obtenerIdentificadores:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: obtener-identificadores
      Handler: com.github.marvindaviddiaz.IdentificadorService
      CodeUri: ./obtener-identificadores/target/obtener-identificadores-1.0-SNAPSHOT.jar
      Description: Obtener Identificadores
      Role: !GetAtt RoleForLambdas.Arn

  consulta:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: consulta
      Handler: com.github.marvindaviddiaz.ConsultaService
      CodeUri: ./consulta/target/consulta-1.0-SNAPSHOT.jar
      Description: Consulta
      Role: !GetAtt RoleForLambdas.Arn

  pago:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: pago
      Handler: com.github.marvindaviddiaz.PagoService
      CodeUri: ./pago/target/pago-1.0-SNAPSHOT.jar
      Description: Pago
      Role: !GetAtt RoleForLambdas.Arn
      MemorySize: 512

  guardarFavorito:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: guardar-favorito
      Handler: com.github.marvindaviddiaz.GuardarFavoritoService
      CodeUri: ./guardar-favorito/target/guardar-favorito-1.0-SNAPSHOT.jar
      Description: Guardar Favorito
      Role: !GetAtt RoleForLambdas.Arn

  obtenerFavoritos:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: obtener-favoritos
      Handler: com.github.marvindaviddiaz.ObtenerFavoritoService
      CodeUri: ./obtener-favoritos/target/obtener-favoritos-1.0-SNAPSHOT.jar
      Description: Obtener Favoritos
      Role: !GetAtt RoleForLambdas.Arn

  consultaHistorico:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: consulta-historico
      Handler: com.github.marvindaviddiaz.ConsultaHistoricoService
      CodeUri: ./consulta-historico/target/consulta-historico-1.0-SNAPSHOT.jar
      Description: Consulta Hist√≥rico
      Role: !GetAtt RoleForLambdas.Arn
      MemorySize: 512

Outputs:
  buscarServicioArn:
    Value: !GetAtt buscarServicio.Arn
    Export:
      Name: !Sub "${Prefix}-buscarServicioArn"
  listarCuentasArn:
    Value: !GetAtt listarCuentas.Arn
    Export:
      Name: !Sub "${Prefix}-listarCuentasArn"
  obtenerIdentificadoresArn:
    Value: !GetAtt obtenerIdentificadores.Arn
    Export:
      Name: !Sub "${Prefix}-obtenerIdentificadoresArn"
  consultaArn:
    Value: !GetAtt consulta.Arn
    Export:
      Name: !Sub "${Prefix}-consultaArn"
  pagoArn:
    Value: !GetAtt pago.Arn
    Export:
      Name: !Sub "${Prefix}-pagoArn"
  guardarFavoritoArn:
    Value: !GetAtt guardarFavorito.Arn
    Export:
      Name: !Sub "${Prefix}-guardarFavoritoArn"
  obtenerFavoritosArn:
    Value: !GetAtt obtenerFavoritos.Arn
    Export:
      Name: !Sub "${Prefix}-obtenerFavoritosArn"
  consultaHistoricoArn:
    Value: !GetAtt consultaHistorico.Arn
    Export:
      Name: !Sub "${Prefix}-consultaHistoricoArn"
